name: Create Release PR
on: 
  workflow_dispatch:
    inputs:
      new_version:
        description: "New sdk version"
        required: true
jobs:
  Release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with: 
        ref: ${{ github.head_ref }}
    - name: validate package dependencies
      run: |
        RESULT=$(swift package show-dependencies | grep unspecified)
        if [ -n "$RESULT" ]; then
          echo "Unspecified dependencies found in the package:"
          echo "$RESULT"
          exit 1
        else
          echo "All dependencies are specified correctly."
        fi
    - name: update version 
      env:
        NEW_VERSION: ${{ inputs.new_version }}
      run: |
        if [[ ! ${NEW_VERSION} =~ ^[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$ ]]; then
          echo "Invalid version format. Expected format: X.Y.Z"
          exit 1
        fi
        sed -e 's/<NEW_VERSION>/${NEW_VERSION}/' Version.template > Sources/apm-agent-ios/Version.swift
        sed -i -e 's/from: ".*"),$/from: "${NEW_VERSION}"),/' docs/reference/set-up-apm-ios-agent.md
        OPENTELEMETRY_VERSION=$(sed -E -n 's/[[:space:]]+url: "https:\/\/github.com\/open-telemetry\/opentelemetry-swift", exact: "(.*)"\),$/\1/p' Package.swift)
        sed -i -e 's/| OpenTelemetry-Swift | .* |/| OpenTelemetry-Swift | ${OPENTELEMETRY_VERSION} |/' docs/reference/supported-technologies.md 
    - uses: actions/create-github-app-token@v2
      id: app-token
      with:
        app-id: ${{ secrets.GITHUB_APP_ID }}
        private-key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}
        repositories: >-
          ["apm-agent-ios"]
    - name: Setup github CLI
      uses: elastic/oblt-actions/git/setup@v1
      with:
        github-token: ${{ steps.app-token.outputs.token }}
    - name: Create pull request 
      env:
        NEW_VERSION: ${{ inputs.new_version }}
      run: |
        if [[ ! ${NEW_VERSION} =~ ^[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$ ]]; then
          echo "Invalid version format. Expected format: X.Y.Z"
          exit 1
        fi
        git checkout -b release/${NEW_VERSION}
        git add .
        git commit -m "Release ${NEW_VERSION}"
        gh pr create -- title "Release ${NEW_VERSION}" --body "This PR is auto-generated by create-pull-request." --base main --head release/${NEW_VERSION} --delete-branch
